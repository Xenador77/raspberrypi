#!/bin/bash
set -euxo pipefail

# My raspberry pi setup file
#
# Warning! This will download my public keys to your user. Change this before
# running it!
#
# Author: Stephen Wood (www.heystephenwood.com)

# This is my apt-cacher mirror
export MIRROR="http://cato:3142"

# Our new user -- me
export NEW_USER="smw"

# My github user. Will pull these public keys
export GITHUB_USER="stephen-mw"

function setup_local(){
    # Set the wifi
    echo 'country=US' >> /etc/wpa_supplicant/wpa_supplicant.conf

    # Set language to EN
    echo 'LANG=en_US.UTF-8' > /etc/default/locale

    # Set the keyboard to US
    cat > /etc/default/keyboard<<KEYBOARD
XKBMODEL="pc105"
XKBLAYOUT="us"
XKBVARIANT=""
XKBOPTIONS=""
BACKSPACE="guess"
KEYBOARD
}

function install_packages(){
    echo "Acquire::http::Proxy \"${MIRROR}\";" > /etc/apt/apt.conf.d/01proxy

    apt update -y
    apt upgrade -y

    apt install -y    \
        curl          \
        git           \
        rpi-update    \
        screen        \
        ssh-import-id \
        wget          \
        ntp           \
        rng-tools     \
        vim

    rpi-update
}

function setup_vim(){
    # Set VIM as the default editor
    update-alternatives --set editor /usr/bin/vim.basic

    # Vim settings (colors, syntax highlighting, tab space, etc).
    curl 'https://raw.githubusercontent.com/stephen-mw/raspberrypi/master/configuration/vimrc' \
        > /etc/vim/vimrc.local
}

function setup_user(){
    if ! id -u ${NEW_USER}; then
        useradd -m -s /bin/bash -G sudo ${NEW_USER}
    fi

    if ! [[ -d ~smw/.ssh ]]; then
        mkdir ~smw/.ssh
    fi

    ssh-import-id gh:stephen-mw -o ~smw/.ssh/authorized_keys
    chmod 600 ~smw/.ssh/authorized_keys
    chown -R smw:smw ~smw

    # Banish the Pi user
    if id -u pi; then
        userdel -rf pi
    fi

    # Remove all sudoers and allow new user to sudo without passsword
    test -f /etc/sudoers.d/010_pi-nopasswd && rm -fv /etc/sudoers.d/010_pi-nopasswd
    cat >/etc/sudoers.d/01${NEW_USER}<<SUDO
${NEW_USER} ALL=(ALL) NOPASSWD: ALL
SUDO
}


function setup_system(){
    # SSH isn't enabled by default?
    systemctl enable ssh
    systemctl start ssh

    
    # Turn off password authentication 
    sed -i 's/#   PasswordAuthentication yes/    PasswordAuthentication no/g' /etc/ssh/ssh_config

    # Set the root user's bash functions similar to other users
    cp /etc/skel/\.* /root/

    # Put your custom functions here
    cat >/etc/profile.d/custom.sh<<CUSTOM
alias ll="ls -ltr"
CUSTOM
}

setup_locale
install_packages
setup_user
setup_system
setup_vim
