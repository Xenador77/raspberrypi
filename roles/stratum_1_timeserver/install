#!/usr/bin/env bash
set -exuo pipefail

# Stratum-1 timeservers use GPS modules to keep highly accurate time from
# atomic clocks in GPS satellites
#
# This script assumes you have the PPS pin attached to GPIO 18 on your rasp-
# berrypi, as well as the TX on your GPS module attached to UART0_RXD
# (GPIO pin 15)

# The GPIO pin connected to PPS
export PPS_GPIO=18

function install_required(){
    apt update -y
    apt upgrade -y
    rpi-update

    apt install -y      \
        asciidoctor     \
        bison           \
        build-essential \
        curl            \
        git             \
        gpsd            \
        gpsd-clients    \
        libcap-dev      \
        pps-tools
}

function setup_serial(){
    # The PPS (pulse-per-second) module on the GPS chip helps the RPI keep the
    # real-time clock highly accurate
    cp /boot/config.txt "/boot/config.txt_backup_$(date +%s)"
    cat >> /boot/config.txt<<BOOT
    
# Enable serial input
enable_uart=1

# Set the PPS GPIO pin for the kernel
dtoverlay=pps-gpio,gpiopin=${PPS_GPIO}
BOOT

    # Keep the serial process from resetting permissions
    systemctl stop serial-getty@ttyS0.service
    systemctl disable serial-getty@ttyS0.service
    test -f /lib/systemd/system/serial-getty@.service && mv /lib/systemd/system/serial-getty@.service{,_backup}

    # Setup the udev rules so that the devices are readable by gpsd
    if [[ -f "/etc/udev/rules.d/99-com.rules" ]]; then
        mv /etc/udev/rules.d/99-com.rules /etc/udev/rules.d/98-com.rules
    fi
    cat > /etc/udev/rules.d/99-gps.rules<<RULES
KERNEL=="ttyS0",     GROUP="tty", MODE="0644", ACTION=="add"
KERNEL=="pps[0-9]*", GROUP="tty", MODE="0644", ACTION=="add"
RULES
}

function configure_chrony(){
    # Stop and disable NTP if it was enabled
    systemctl stop ntp || true
    systemctl disable ntp || true

    pushd /usr/local/src
    if [[ -d chrony ]]; then
        rm -rfv -- chrony
    fi

    if ! id -u chrony; then
        useradd --system -s /bin/false -d /tmp -G tty chrony 
    fi

    git clone https://git.tuxfamily.org/chrony/chrony.git
    pushd chrony
    ./configure --enable-debug --with-user=chrony

    make
    make docs
    make install
    make install-docs

    curl -fs 'https://raw.githubusercontent.com/stephen-mw/raspberrypi/master/roles/stratum_1_timeserver/chrony.conf' \
        > /etc/chrony.conf
    curl -fs 'https://raw.githubusercontent.com/stephen-mw/raspberrypi/master/roles/stratum_1_timeserver/chrony.service' \
        > /etc/systemd/system/chrony.service

    systemctl daemon-reload
    systemctl enable chrony

    rm -rfv -- chrony
}

function configure_gpsd(){
    /etc/init.d/gpsd stop  || true
    systemctl stop gpsd    || true
    systemctl disable gpsd || true
    rm -rfv /lib/systemd/system/gpsd* || true
    
    test -f /etc/init.d/gpsd && rm -rfv /etc/init.d/gpsd

    curl -fs 'https://raw.githubusercontent.com/stephen-mw/raspberrypi/master/roles/stratum_1_timeserver/gpsd.service' \
        > /etc/systemd/system/gpsd.service

    usermod -a -G tty gpsd
    systemctl daemon-reload
    systemctl enable gpsd
}

function help_message(){
cat <<HELP

### Installation Complete! ##

You must reboot before your system will work!


To test the PPS pin:

    $ ppstest /dev/pps0
    
To test your GPS lock:

    $ cgps

Good luck!

HELP
}

install_required
setup_serial
#configure_chrony
configure_gpsd
help_message
